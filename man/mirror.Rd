% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mirror-reflection.R
\name{mirror}
\alias{mirror}
\alias{\%mir\%}
\alias{mx}
\alias{\%mx\%}
\alias{my}
\alias{\%my\%}
\alias{mxy}
\alias{\%mxy\%}
\alias{mh}
\alias{\%mh\%}
\alias{mv}
\alias{\%mv\%}
\title{Mirror Reflection Transformation}
\usage{
mirror(sf, k, b)

sf \%mir\% kb

mx(sf)

sf \%mx\% anyvalue

my(sf)

sf \%my\% anyvalue

mxy(sf)

sf \%mxy\% anyvalue

mh(sf, h)

sf \%mh\% h

mv(sf, v)

sf \%mv\% v
}
\arguments{
\item{sf}{an sf object}

\item{k}{slope}

\item{b}{intercept}

\item{kb}{two numbers for k and b, default is c(1,0)}

\item{anyvalue}{will be ignored}

\item{h}{horizontal value for mirror, ig. y value}

\item{v}{vertical value, ig. x value}
}
\value{
an mirrored sf object
}
\description{
Mirror Reflection Transformation
}
\details{
Mirror refletion transformation is one of the most important
transformations. This function is only used for simple feature with two
dimensions. Argument k is the slope of the straight line. Argument b is
the intercept. So, we build the formula of the line constructed by k and b,
as follows
\deqn{y = k*x + b}
which can be transformed into
\deqn{k*x + (-1)*y + b = 0}
Then, we use the formal equation
\deqn{a*x + b*y + c = 0}
to calculate the coordinates of the mirrored point B(x_{1},y_{1}) from
original point A(x_{0}, y_{0})
\deqn{x_{1} =\frac{(b^{2} - a^{2})*x_{0} - 2*a*b*y_{0} - 2*a*c}{a^{2} + b^{2}}}
\deqn{y_{1} =\frac{(a^{2} - b^{2})*y_{0} - 2*a*b*x_{0} - 2*b*c}{a^{2} + b^{2}}}
}
\examples{
library(sf666)
library(ggplot2)
#generate a triangle
tri=triangle()

# use basic mirror

ggplot()+
    geom_sf(data = tri,fill='red')

ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mirror(tri,k=1,b=0),fill='blue')

ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mirror(tri,k=2,b=1),fill='blue')

# infix \%mir\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%mir\% c(1,0),fill='blue')

#mirrored by x-axis
#prefix mx()
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mx(tri),fill='blue')

#infix \%mx\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%mx\% 1,fill='blue')

#mirrored by y-axis
#prefix my()
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = my(tri),fill='blue')

#infix \%my\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%my\% 1,fill='blue')

#mirrored by xy-axis, means origianl point O.
#prefix mxy()
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mxy(tri),fill='blue')

#infix \%mxy\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%mxy\% 1,fill='blue')

#mirrored by x-axis
#prefix mh()
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mh(tri,1),fill='blue')

#infix \%mh\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%mh\% 1,fill='blue')

#mirrored by x-axis
#prefix mv()
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = mv(tri,1),fill='blue')

#infix \%mv\%
ggplot()+
    geom_sf(data = tri,fill='red')+
    geom_sf(data = tri \%mv\% 1,fill='blue')
}
